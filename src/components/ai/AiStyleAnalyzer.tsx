import React, { useState } from 'react';
import { Button } from '@/components/ui/button';
import { Sparkles, Upload, Heart } from 'lucide-react';
import { useWalletCustomizationStore } from '@/stores/walletCustomizationStore';
import { analyzeImageWithAI, generateWalletStyleFromAnalysis, saveStyleToLibrary } from '@/services/aiStyleAnalysisService';
import { toast } from 'sonner';
import { frontendLogger } from '@/services/frontendLogger';

interface AiStyleAnalyzerProps {
  uploadedImage: string | null;
  onStyleGenerated?: (styleData: any) => void;
}

const AiStyleAnalyzer: React.FC<AiStyleAnalyzerProps> = ({ uploadedImage, onStyleGenerated }) => {
  const [isAnalyzing, setIsAnalyzing] = useState(false);
  const [lastGeneratedStyle, setLastGeneratedStyle] = useState<any>(null);
  const [lastAnalysis, setLastAnalysis] = useState<any>(null);
  const { setWalletStyle, setAiPetZone, triggerAiPetInteraction, walletStyle } = useWalletCustomizationStore();

  const handleAnalyzeAndApply = async () => {
    if (!uploadedImage) {
      toast.error('–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∑–∞–≥—Ä—É–∑–∏—Ç–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞');
      return;
    }

    setIsAnalyzing(true);
    
    // Log the start of style generation
    await frontendLogger.logStyleGeneration('AI Style Analysis', true);
    
    try {
      toast.info('ü§ñ AI –∞–Ω–∞–ª–∏–∑–∏—Ä—É–µ—Ç –≤–∞—à–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ...');
      
      // Log image analysis start
      console.log('üîç Starting AI style analysis...');
      
      // –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Å –ø–æ–º–æ—â—å—é AI
      const analysis = await analyzeImageWithAI(uploadedImage);
      setLastAnalysis(analysis);
      
      // –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º —Å—Ç–∏–ª–∏ –¥–ª—è –≤—Å–µ—Ö –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤
      const walletStyleSet = generateWalletStyleFromAnalysis(analysis);
      setLastGeneratedStyle(walletStyleSet);
      
      // –ü—Ä–∏–º–µ–Ω—è–µ–º –≥–ª–æ–±–∞–ª—å–Ω—ã–µ —Å—Ç–∏–ª–∏ –∫ –∫–æ—à–µ–ª—å–∫—É —Å –ø–æ–ª–Ω—ã–º –æ–±—ä–µ–∫—Ç–æ–º WalletStyle
      const completeStyle = {
        ...walletStyle, // Keep existing properties
        backgroundColor: walletStyleSet.global.backgroundColor,
        accentColor: walletStyleSet.buttons.backgroundColor,
        primaryColor: walletStyleSet.buttons.backgroundColor,
        fontFamily: walletStyleSet.global.fontFamily,
        font: walletStyleSet.global.fontFamily
      };
      
      setWalletStyle(completeStyle);
      
      // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º AI Pet –≤ —Ä–µ–∂–∏–º —Ü–∏—Ä–∫—É–ª—è—Ü–∏–∏ –≤–æ–∫—Ä—É–≥ –∫–æ—à–µ–ª—å–∫–∞
      setAiPetZone('outside');
      triggerAiPetInteraction();
      
      // Log successful application
      await frontendLogger.logStyleApplication(`AI ${analysis.style}`, completeStyle);
      
      toast.success(`üé® –°—Ç–∏–ª—å "${analysis.style}" –ø—Ä–∏–º–µ–Ω–µ–Ω! AI Pet —Ç–µ–ø–µ—Ä—å —Ü–∏—Ä–∫—É–ª–∏—Ä—É–µ—Ç –≤–æ–∫—Ä—É–≥ –∫–æ—à–µ–ª—å–∫–∞`);
      
      // –£–≤–µ–¥–æ–º–ª—è–µ–º —Ä–æ–¥–∏—Ç–µ–ª—å—Å–∫–∏–π –∫–æ–º–ø–æ–Ω–µ–Ω—Ç
      if (onStyleGenerated) {
        onStyleGenerated(walletStyleSet);
      }
      
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ AI –∞–Ω–∞–ª–∏–∑–∞:', error);
      
      // Log the error
      await frontendLogger.logUserError('AI_ANALYSIS_ERROR', error.message, 'ai_style_analyzer');
      
      toast.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –∞–Ω–∞–ª–∏–∑–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –¥—Ä—É–≥–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ.');
    } finally {
      setIsAnalyzing(false);
    }
  };

  const handleSaveToLibrary = async () => {
    if (!lastGeneratedStyle || !lastAnalysis || !uploadedImage) {
      toast.error('–ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è');
      return;
    }

    try {
      const styleName = `${lastAnalysis.style} ${lastAnalysis.mood}`;
      await saveStyleToLibrary(
        styleName,
        lastGeneratedStyle,
        lastAnalysis,
        '', // TODO: Generate preview image
        uploadedImage
      );
      
      // Log save to library
      await frontendLogger.logSaveToLibrary(styleName);
      
      toast.success('üéâ –°—Ç–∏–ª—å —Å–æ—Ö—Ä–∞–Ω–µ–Ω –≤ –±–∏–±–ª–∏–æ—Ç–µ–∫—É!');
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è —Å—Ç–∏–ª—è:', error);
      
      // Log the error
      await frontendLogger.logUserError('SAVE_TO_LIBRARY_ERROR', error.message, 'ai_style_analyzer');
      
      toast.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏ —Å—Ç–∏–ª—è');
    }
  };

  return (
    <div className="space-y-4">
      <div className="bg-gradient-to-r from-purple-600/20 to-pink-600/20 border border-purple-500/30 rounded-lg p-4">
        <div className="flex items-center space-x-2 mb-3">
          <Sparkles className="w-5 h-5 text-purple-400" />
          <h3 className="text-lg font-medium text-white">AI Style Analyzer</h3>
        </div>
        
        <p className="text-gray-300 text-sm mb-4">
          –ó–∞–≥—Ä—É–∑–∏—Ç–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ, –∏ AI –ø—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä—É–µ—Ç –µ–≥–æ —Å—Ç–∏–ª—å, –ø—Ä–∏–º–µ–Ω–∏–≤ –µ–≥–æ –∫–æ –≤—Å–µ–º —ç–ª–µ–º–µ–Ω—Ç–∞–º –∫–æ—à–µ–ª—å–∫–∞
        </p>

        {!uploadedImage ? (
          <div className="flex items-center justify-center p-6 border-2 border-dashed border-gray-600 rounded-lg">
            <div className="text-center">
              <Upload className="w-8 h-8 text-gray-400 mx-auto mb-2" />
              <p className="text-gray-400 text-sm">–ó–∞–≥—Ä—É–∑–∏—Ç–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –≤—ã—à–µ</p>
            </div>
          </div>
        ) : (
          <div className="space-y-3">
            <img 
              src={uploadedImage} 
              alt="Uploaded for analysis" 
              className="w-full h-32 object-cover rounded-lg"
            />
            
            <Button 
              onClick={handleAnalyzeAndApply}
              disabled={isAnalyzing}
              className="w-full bg-gradient-to-r from-purple-600 to-pink-600 hover:from-purple-700 hover:to-pink-700"
            >
              {isAnalyzing ? (
                <>
                  <div className="animate-spin rounded-full h-4 w-4 border-b-2 border-white mr-2" />
                  –ê–Ω–∞–ª–∏–∑–∏—Ä—É—é —Å—Ç–∏–ª—å...
                </>
              ) : (
                <>
                  <Sparkles className="w-4 h-4 mr-2" />
                  –ü—Ä–∏–º–µ–Ω–∏—Ç—å AI —Å—Ç–∏–ª—å
                </>
              )}
            </Button>

            {lastGeneratedStyle && (
              <Button 
                onClick={handleSaveToLibrary}
                variant="outline"
                className="w-full border-pink-500/50 text-pink-300 hover:bg-pink-500/10"
              >
                <Heart className="w-4 h-4 mr-2" />
                –°–æ—Ö—Ä–∞–Ω–∏—Ç—å –≤ –±–∏–±–ª–∏–æ—Ç–µ–∫—É
              </Button>
            )}
          </div>
        )}

        {lastAnalysis && (
          <div className="mt-4 p-3 bg-black/20 rounded-lg">
            <h4 className="text-sm font-medium text-white mb-2">–†–µ–∑—É–ª—å—Ç–∞—Ç –∞–Ω–∞–ª–∏–∑–∞:</h4>
            <div className="text-xs text-gray-300 space-y-1">
              <p><span className="text-purple-400">–°—Ç–∏–ª—å:</span> {lastAnalysis.style}</p>
              <p><span className="text-purple-400">–ù–∞—Å—Ç—Ä–æ–µ–Ω–∏–µ:</span> {lastAnalysis.mood}</p>
              <p><span className="text-purple-400">–®—Ä–∏—Ñ—Ç:</span> {lastAnalysis.fontRecommendation}</p>
              <div className="flex items-center space-x-1">
                <span className="text-purple-400">–¶–≤–µ—Ç–∞:</span>
                {lastAnalysis.colors.map((color: string, index: number) => (
                  <div 
                    key={index}
                    className="w-4 h-4 rounded-full border border-white/20"
                    style={{ backgroundColor: color }}
                  />
                ))}
              </div>
            </div>
          </div>
        )}
      </div>
    </div>
  );
};

export default AiStyleAnalyzer;
