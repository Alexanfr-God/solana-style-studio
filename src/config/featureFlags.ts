
// –ï–¥–∏–Ω—ã–π –∏—Å—Ç–æ—á–Ω–∏–∫ –ø—Ä–∞–≤–¥—ã –¥–ª—è —Ñ–∏—á–µ—Ñ–ª–∞–≥–æ–≤ (–∫–ª–∏–µ–Ω—Ç + —Å–µ—Ä–≤–µ—Ä)
// –ß–∏—Ç–∞–µ—Ç –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –≤–∞–ª–∏–¥–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ boolean –∑–Ω–∞—á–µ–Ω–∏—è

// –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Å—Ä–µ–¥—É –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è
const isServer = typeof Deno !== 'undefined';
const isClient = typeof window !== 'undefined';

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –±–µ–∑–æ–ø–∞—Å–Ω–æ–≥–æ —á—Ç–µ–Ω–∏—è –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
const getEnvFlag = (clientKey: string, serverKey: string, defaultValue: boolean = false): boolean => {
  if (isServer) {
    // –°–µ—Ä–≤–µ—Ä–Ω–∞—è —Å—Ä–µ–¥–∞ (Deno/Edge Functions)
    const value = Deno.env.get(serverKey);
    return value === 'true';
  } else if (isClient) {
    // –ö–ª–∏–µ–Ω—Ç—Å–∫–∞—è —Å—Ä–µ–¥–∞ (Vite)
    const value = import.meta.env[clientKey];
    return value === 'true';
  }
  return defaultValue;
};

// –≠–∫—Å–ø–æ—Ä—Ç —Ü–µ–Ω—Ç—Ä–∞–ª–∏–∑–æ–≤–∞–Ω–Ω—ã—Ö —Ñ–ª–∞–≥–æ–≤
export const FLAGS = {
  ASSETS_ENABLED: getEnvFlag('VITE_ASSETS_ENABLED', 'ASSETS_ENABLED', false),
  ICON_LIB_ENABLED: getEnvFlag('VITE_ICON_LIB_ENABLED', 'ICON_LIB_ENABLED', false),
  AI_LOGS_ENABLED: getEnvFlag('VITE_AI_LOGS_ENABLED', 'AI_LOGS_ENABLED', false)
} as const;

// –¢–∏–ø—ã –¥–ª—è TypeScript
export type FeatureFlags = typeof FLAGS;

// –£—Ç–∏–ª–∏—Ç—ã –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ñ–ª–∞–≥–æ–≤
export const isAssetsEnabled = (): boolean => FLAGS.ASSETS_ENABLED;
export const isIconLibEnabled = (): boolean => FLAGS.ICON_LIB_ENABLED;
export const isAiLogsEnabled = (): boolean => FLAGS.AI_LOGS_ENABLED;

// –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–æ—Å—Ç–æ—è–Ω–∏—è —Ñ–ª–∞–≥–æ–≤ (—Ç–æ–ª—å–∫–æ –≤ dev —Ä–µ–∂–∏–º–µ)
if (isClient && import.meta.env.DEV) {
  console.log('üéõÔ∏è Feature Flags:', FLAGS);
}

// –≠–∫—Å–ø–æ—Ä—Ç –¥–ª—è –æ–±—Ä–∞—Ç–Ω–æ–π —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏
export const THEME_SOT_IS_ZUSTAND = true;
